#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _2001207328_NguyenDuyThinh.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DuyThinh")]
	public partial class Data1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser1(User1 instance);
    partial void UpdateUser1(User1 instance);
    partial void DeleteUser1(User1 instance);
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertCT_DonHang(CT_DonHang instance);
    partial void UpdateCT_DonHang(CT_DonHang instance);
    partial void DeleteCT_DonHang(CT_DonHang instance);
    partial void InsertChiTiet(ChiTiet instance);
    partial void UpdateChiTiet(ChiTiet instance);
    partial void DeleteChiTiet(ChiTiet instance);
    partial void InsertChuDe(ChuDe instance);
    partial void UpdateChuDe(ChuDe instance);
    partial void DeleteChuDe(ChuDe instance);
    partial void InsertDevice(Device instance);
    partial void UpdateDevice(Device instance);
    partial void DeleteDevice(Device instance);
    partial void InsertDon_Dat_Hang(Don_Dat_Hang instance);
    partial void UpdateDon_Dat_Hang(Don_Dat_Hang instance);
    partial void DeleteDon_Dat_Hang(Don_Dat_Hang instance);
    partial void InsertICON(ICON instance);
    partial void UpdateICON(ICON instance);
    partial void DeleteICON(ICON instance);
    partial void InsertKhach_Hang(Khach_Hang instance);
    partial void UpdateKhach_Hang(Khach_Hang instance);
    partial void DeleteKhach_Hang(Khach_Hang instance);
    partial void InsertNha_San_Xuat(Nha_San_Xuat instance);
    partial void UpdateNha_San_Xuat(Nha_San_Xuat instance);
    partial void DeleteNha_San_Xuat(Nha_San_Xuat instance);
    partial void InserttitleCD(titleCD instance);
    partial void UpdatetitleCD(titleCD instance);
    partial void DeletetitleCD(titleCD instance);
    #endregion
		
		public Data1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
        public Data1DataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DuyThinhConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public Data1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Data1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User1> User1s
		{
			get
			{
				return this.GetTable<User1>();
			}
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this.GetTable<CT_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTiet> ChiTiets
		{
			get
			{
				return this.GetTable<ChiTiet>();
			}
		}
		
		public System.Data.Linq.Table<ChuDe> ChuDes
		{
			get
			{
				return this.GetTable<ChuDe>();
			}
		}
		
		public System.Data.Linq.Table<Device> Devices
		{
			get
			{
				return this.GetTable<Device>();
			}
		}
		
		public System.Data.Linq.Table<Don_Dat_Hang> Don_Dat_Hangs
		{
			get
			{
				return this.GetTable<Don_Dat_Hang>();
			}
		}
		
		public System.Data.Linq.Table<ICON> ICONs
		{
			get
			{
				return this.GetTable<ICON>();
			}
		}
		
		public System.Data.Linq.Table<Khach_Hang> Khach_Hangs
		{
			get
			{
				return this.GetTable<Khach_Hang>();
			}
		}
		
		public System.Data.Linq.Table<Nha_San_Xuat> Nha_San_Xuats
		{
			get
			{
				return this.GetTable<Nha_San_Xuat>();
			}
		}
		
		public System.Data.Linq.Table<Sheet1> Sheet1s
		{
			get
			{
				return this.GetTable<Sheet1>();
			}
		}
		
		public System.Data.Linq.Table<titleCD> titleCDs
		{
			get
			{
				return this.GetTable<titleCD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User1")]
	public partial class User1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaUser;
		
		private string _HoTen;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaUserChanging(int value);
    partial void OnMaUserChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public User1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaUser
		{
			get
			{
				return this._MaUser;
			}
			set
			{
				if ((this._MaUser != value))
				{
					this.OnMaUserChanging(value);
					this.SendPropertyChanging();
					this._MaUser = value;
					this.SendPropertyChanged("MaUser");
					this.OnMaUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="VarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(255)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_Admin;
		
		private string _password;
		
		private string _ho_ten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_AdminChanging(string value);
    partial void OnUser_AdminChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onho_tenChanging(string value);
    partial void Onho_tenChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Admin", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_Admin
		{
			get
			{
				return this._User_Admin;
			}
			set
			{
				if ((this._User_Admin != value))
				{
					this.OnUser_AdminChanging(value);
					this.SendPropertyChanging();
					this._User_Admin = value;
					this.SendPropertyChanged("User_Admin");
					this.OnUser_AdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ho_ten", DbType="VarChar(255)")]
		public string ho_ten
		{
			get
			{
				return this._ho_ten;
			}
			set
			{
				if ((this._ho_ten != value))
				{
					this.Onho_tenChanging(value);
					this.SendPropertyChanging();
					this._ho_ten = value;
					this.SendPropertyChanged("ho_ten");
					this.Onho_tenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DonHang")]
	public partial class CT_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCT;
		
		private System.Nullable<int> _MaDH;
		
		private System.Nullable<int> _MaDevice;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<Device> _Device;
		
		private EntityRef<Don_Dat_Hang> _Don_Dat_Hang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(int value);
    partial void OnMaCTChanged();
    partial void OnMaDHChanging(System.Nullable<int> value);
    partial void OnMaDHChanged();
    partial void OnMaDeviceChanging(System.Nullable<int> value);
    partial void OnMaDeviceChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CT_DonHang()
		{
			this._Device = default(EntityRef<Device>);
			this._Don_Dat_Hang = default(EntityRef<Don_Dat_Hang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int")]
		public System.Nullable<int> MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._Don_Dat_Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDevice", DbType="Int")]
		public System.Nullable<int> MaDevice
		{
			get
			{
				return this._MaDevice;
			}
			set
			{
				if ((this._MaDevice != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeviceChanging(value);
					this.SendPropertyChanging();
					this._MaDevice = value;
					this.SendPropertyChanged("MaDevice");
					this.OnMaDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_CT_DonHang", Storage="_Device", ThisKey="MaDevice", OtherKey="MaDevice", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._MaDevice = value.MaDevice;
					}
					else
					{
						this._MaDevice = default(Nullable<int>);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Don_Dat_Hang_CT_DonHang", Storage="_Don_Dat_Hang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public Don_Dat_Hang Don_Dat_Hang
		{
			get
			{
				return this._Don_Dat_Hang.Entity;
			}
			set
			{
				Don_Dat_Hang previousValue = this._Don_Dat_Hang.Entity;
				if (((previousValue != value) 
							|| (this._Don_Dat_Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Don_Dat_Hang.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._Don_Dat_Hang.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(Nullable<int>);
					}
					this.SendPropertyChanged("Don_Dat_Hang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet")]
	public partial class ChiTiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaDev;
		
		private string _DacDiem;
		
		private string _IMG;
		
		private EntityRef<Device> _Device;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaDevChanging(System.Nullable<int> value);
    partial void OnMaDevChanged();
    partial void OnDacDiemChanging(string value);
    partial void OnDacDiemChanged();
    partial void OnIMGChanging(string value);
    partial void OnIMGChanged();
    #endregion
		
		public ChiTiet()
		{
			this._Device = default(EntityRef<Device>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDev", DbType="Int")]
		public System.Nullable<int> MaDev
		{
			get
			{
				return this._MaDev;
			}
			set
			{
				if ((this._MaDev != value))
				{
					if (this._Device.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDevChanging(value);
					this.SendPropertyChanging();
					this._MaDev = value;
					this.SendPropertyChanged("MaDev");
					this.OnMaDevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DacDiem", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DacDiem
		{
			get
			{
				return this._DacDiem;
			}
			set
			{
				if ((this._DacDiem != value))
				{
					this.OnDacDiemChanging(value);
					this.SendPropertyChanging();
					this._DacDiem = value;
					this.SendPropertyChanged("DacDiem");
					this.OnDacDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG", DbType="VarChar(255)")]
		public string IMG
		{
			get
			{
				return this._IMG;
			}
			set
			{
				if ((this._IMG != value))
				{
					this.OnIMGChanging(value);
					this.SendPropertyChanging();
					this._IMG = value;
					this.SendPropertyChanged("IMG");
					this.OnIMGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_ChiTiet", Storage="_Device", ThisKey="MaDev", OtherKey="MaDevice", IsForeignKey=true)]
		public Device Device
		{
			get
			{
				return this._Device.Entity;
			}
			set
			{
				Device previousValue = this._Device.Entity;
				if (((previousValue != value) 
							|| (this._Device.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Device.Entity = null;
						previousValue.ChiTiets.Remove(this);
					}
					this._Device.Entity = value;
					if ((value != null))
					{
						value.ChiTiets.Add(this);
						this._MaDev = value.MaDevice;
					}
					else
					{
						this._MaDev = default(Nullable<int>);
					}
					this.SendPropertyChanged("Device");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuDe")]
	public partial class ChuDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCD;
		
		private string _TenChuDE;
		
		private EntitySet<Device> _Devices;
		
		private EntitySet<ICON> _ICONs;
		
		private EntitySet<titleCD> _titleCDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCDChanging(int value);
    partial void OnMaCDChanged();
    partial void OnTenChuDEChanging(string value);
    partial void OnTenChuDEChanged();
    #endregion
		
		public ChuDe()
		{
			this._Devices = new EntitySet<Device>(new Action<Device>(this.attach_Devices), new Action<Device>(this.detach_Devices));
			this._ICONs = new EntitySet<ICON>(new Action<ICON>(this.attach_ICONs), new Action<ICON>(this.detach_ICONs));
			this._titleCDs = new EntitySet<titleCD>(new Action<titleCD>(this.attach_titleCDs), new Action<titleCD>(this.detach_titleCDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCD
		{
			get
			{
				return this._MaCD;
			}
			set
			{
				if ((this._MaCD != value))
				{
					this.OnMaCDChanging(value);
					this.SendPropertyChanging();
					this._MaCD = value;
					this.SendPropertyChanged("MaCD");
					this.OnMaCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuDE", DbType="VarChar(255)")]
		public string TenChuDE
		{
			get
			{
				return this._TenChuDE;
			}
			set
			{
				if ((this._TenChuDE != value))
				{
					this.OnTenChuDEChanging(value);
					this.SendPropertyChanging();
					this._TenChuDE = value;
					this.SendPropertyChanged("TenChuDE");
					this.OnTenChuDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_Device", Storage="_Devices", ThisKey="MaCD", OtherKey="MaCD")]
		public EntitySet<Device> Devices
		{
			get
			{
				return this._Devices;
			}
			set
			{
				this._Devices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_ICON", Storage="_ICONs", ThisKey="MaCD", OtherKey="MACD")]
		public EntitySet<ICON> ICONs
		{
			get
			{
				return this._ICONs;
			}
			set
			{
				this._ICONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_titleCD", Storage="_titleCDs", ThisKey="MaCD", OtherKey="MaCD")]
		public EntitySet<titleCD> titleCDs
		{
			get
			{
				return this._titleCDs;
			}
			set
			{
				this._titleCDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = this;
		}
		
		private void detach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = null;
		}
		
		private void attach_ICONs(ICON entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = this;
		}
		
		private void detach_ICONs(ICON entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = null;
		}
		
		private void attach_titleCDs(titleCD entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = this;
		}
		
		private void detach_titleCDs(titleCD entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Device")]
	public partial class Device : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDevice;
		
		private string _TenDevice;
		
		private System.Nullable<decimal> _GiaBan;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _SoLuongTon;
		
		private System.Nullable<int> _MaCD;
		
		private System.Nullable<int> _MaNSX;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntitySet<ChiTiet> _ChiTiets;
		
		private EntityRef<ChuDe> _ChuDe;
		
		private EntityRef<Nha_San_Xuat> _Nha_San_Xuat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeviceChanging(int value);
    partial void OnMaDeviceChanged();
    partial void OnTenDeviceChanging(string value);
    partial void OnTenDeviceChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnMaCDChanging(System.Nullable<int> value);
    partial void OnMaCDChanged();
    partial void OnMaNSXChanging(System.Nullable<int> value);
    partial void OnMaNSXChanged();
    #endregion
		
		public Device()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._ChiTiets = new EntitySet<ChiTiet>(new Action<ChiTiet>(this.attach_ChiTiets), new Action<ChiTiet>(this.detach_ChiTiets));
			this._ChuDe = default(EntityRef<ChuDe>);
			this._Nha_San_Xuat = default(EntityRef<Nha_San_Xuat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDevice", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDevice
		{
			get
			{
				return this._MaDevice;
			}
			set
			{
				if ((this._MaDevice != value))
				{
					this.OnMaDeviceChanging(value);
					this.SendPropertyChanging();
					this._MaDevice = value;
					this.SendPropertyChanged("MaDevice");
					this.OnMaDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDevice", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TenDevice
		{
			get
			{
				return this._TenDevice;
			}
			set
			{
				if ((this._TenDevice != value))
				{
					this.OnTenDeviceChanging(value);
					this.SendPropertyChanging();
					this._TenDevice = value;
					this.SendPropertyChanged("TenDevice");
					this.OnTenDeviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(255)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCD", DbType="Int")]
		public System.Nullable<int> MaCD
		{
			get
			{
				return this._MaCD;
			}
			set
			{
				if ((this._MaCD != value))
				{
					if (this._ChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCDChanging(value);
					this.SendPropertyChanging();
					this._MaCD = value;
					this.SendPropertyChanged("MaCD");
					this.OnMaCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int")]
		public System.Nullable<int> MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					if (this._Nha_San_Xuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_CT_DonHang", Storage="_CT_DonHangs", ThisKey="MaDevice", OtherKey="MaDevice")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Device_ChiTiet", Storage="_ChiTiets", ThisKey="MaDevice", OtherKey="MaDev")]
		public EntitySet<ChiTiet> ChiTiets
		{
			get
			{
				return this._ChiTiets;
			}
			set
			{
				this._ChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_Device", Storage="_ChuDe", ThisKey="MaCD", OtherKey="MaCD", IsForeignKey=true)]
		public ChuDe ChuDe
		{
			get
			{
				return this._ChuDe.Entity;
			}
			set
			{
				ChuDe previousValue = this._ChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuDe.Entity = null;
						previousValue.Devices.Remove(this);
					}
					this._ChuDe.Entity = value;
					if ((value != null))
					{
						value.Devices.Add(this);
						this._MaCD = value.MaCD;
					}
					else
					{
						this._MaCD = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nha_San_Xuat_Device", Storage="_Nha_San_Xuat", ThisKey="MaNSX", OtherKey="MaNSX", IsForeignKey=true)]
		public Nha_San_Xuat Nha_San_Xuat
		{
			get
			{
				return this._Nha_San_Xuat.Entity;
			}
			set
			{
				Nha_San_Xuat previousValue = this._Nha_San_Xuat.Entity;
				if (((previousValue != value) 
							|| (this._Nha_San_Xuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nha_San_Xuat.Entity = null;
						previousValue.Devices.Remove(this);
					}
					this._Nha_San_Xuat.Entity = value;
					if ((value != null))
					{
						value.Devices.Add(this);
						this._MaNSX = value.MaNSX;
					}
					else
					{
						this._MaNSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nha_San_Xuat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
		
		private void attach_ChiTiets(ChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.Device = this;
		}
		
		private void detach_ChiTiets(ChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.Device = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Don_Dat_Hang")]
	public partial class Don_Dat_Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<System.DateTime> _NgayDH;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private string _TinhTrangGiaoHang;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Address;
		
		private string _Name;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<Khach_Hang> _Khach_Hang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnNgayDHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDHChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnTinhTrangGiaoHangChanging(string value);
    partial void OnTinhTrangGiaoHangChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Don_Dat_Hang()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._Khach_Hang = default(EntityRef<Khach_Hang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._Khach_Hang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDH", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDH
		{
			get
			{
				return this._NgayDH;
			}
			set
			{
				if ((this._NgayDH != value))
				{
					this.OnNgayDHChanging(value);
					this.SendPropertyChanging();
					this._NgayDH = value;
					this.SendPropertyChanged("NgayDH");
					this.OnNgayDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangGiaoHang", DbType="VarChar(255)")]
		public string TinhTrangGiaoHang
		{
			get
			{
				return this._TinhTrangGiaoHang;
			}
			set
			{
				if ((this._TinhTrangGiaoHang != value))
				{
					this.OnTinhTrangGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangGiaoHang = value;
					this.SendPropertyChanged("TinhTrangGiaoHang");
					this.OnTinhTrangGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Don_Dat_Hang_CT_DonHang", Storage="_CT_DonHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Hang_Don_Dat_Hang", Storage="_Khach_Hang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public Khach_Hang Khach_Hang
		{
			get
			{
				return this._Khach_Hang.Entity;
			}
			set
			{
				Khach_Hang previousValue = this._Khach_Hang.Entity;
				if (((previousValue != value) 
							|| (this._Khach_Hang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khach_Hang.Entity = null;
						previousValue.Don_Dat_Hangs.Remove(this);
					}
					this._Khach_Hang.Entity = value;
					if ((value != null))
					{
						value.Don_Dat_Hangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khach_Hang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Don_Dat_Hang = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.Don_Dat_Hang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICON")]
	public partial class ICON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSp;
		
		private string _IMG_ICON;
		
		private System.Nullable<int> _MACD;
		
		private string _Name;
		
		private EntityRef<ChuDe> _ChuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSpChanging(int value);
    partial void OnMaSpChanged();
    partial void OnIMG_ICONChanging(string value);
    partial void OnIMG_ICONChanged();
    partial void OnMACDChanging(System.Nullable<int> value);
    partial void OnMACDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ICON()
		{
			this._ChuDe = default(EntityRef<ChuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSp", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSp
		{
			get
			{
				return this._MaSp;
			}
			set
			{
				if ((this._MaSp != value))
				{
					this.OnMaSpChanging(value);
					this.SendPropertyChanging();
					this._MaSp = value;
					this.SendPropertyChanged("MaSp");
					this.OnMaSpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG_ICON", DbType="VarChar(255)")]
		public string IMG_ICON
		{
			get
			{
				return this._IMG_ICON;
			}
			set
			{
				if ((this._IMG_ICON != value))
				{
					this.OnIMG_ICONChanging(value);
					this.SendPropertyChanging();
					this._IMG_ICON = value;
					this.SendPropertyChanged("IMG_ICON");
					this.OnIMG_ICONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACD", DbType="Int")]
		public System.Nullable<int> MACD
		{
			get
			{
				return this._MACD;
			}
			set
			{
				if ((this._MACD != value))
				{
					if (this._ChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACDChanging(value);
					this.SendPropertyChanging();
					this._MACD = value;
					this.SendPropertyChanged("MACD");
					this.OnMACDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_ICON", Storage="_ChuDe", ThisKey="MACD", OtherKey="MaCD", IsForeignKey=true)]
		public ChuDe ChuDe
		{
			get
			{
				return this._ChuDe.Entity;
			}
			set
			{
				ChuDe previousValue = this._ChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuDe.Entity = null;
						previousValue.ICONs.Remove(this);
					}
					this._ChuDe.Entity = value;
					if ((value != null))
					{
						value.ICONs.Add(this);
						this._MACD = value.MaCD;
					}
					else
					{
						this._MACD = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khach_Hang")]
	public partial class Khach_Hang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private EntitySet<Don_Dat_Hang> _Don_Dat_Hangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public Khach_Hang()
		{
			this._Don_Dat_Hangs = new EntitySet<Don_Dat_Hang>(new Action<Don_Dat_Hang>(this.attach_Don_Dat_Hangs), new Action<Don_Dat_Hang>(this.detach_Don_Dat_Hangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(255)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(255)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_Hang_Don_Dat_Hang", Storage="_Don_Dat_Hangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<Don_Dat_Hang> Don_Dat_Hangs
		{
			get
			{
				return this._Don_Dat_Hangs;
			}
			set
			{
				this._Don_Dat_Hangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Don_Dat_Hangs(Don_Dat_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Khach_Hang = this;
		}
		
		private void detach_Don_Dat_Hangs(Don_Dat_Hang entity)
		{
			this.SendPropertyChanging();
			entity.Khach_Hang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nha_San_Xuat")]
	public partial class Nha_San_Xuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNSX;
		
		private string _TenNSX;
		
		private EntitySet<Device> _Devices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNSXChanging(int value);
    partial void OnMaNSXChanged();
    partial void OnTenNSXChanging(string value);
    partial void OnTenNSXChanged();
    #endregion
		
		public Nha_San_Xuat()
		{
			this._Devices = new EntitySet<Device>(new Action<Device>(this.attach_Devices), new Action<Device>(this.detach_Devices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNSX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNSX
		{
			get
			{
				return this._MaNSX;
			}
			set
			{
				if ((this._MaNSX != value))
				{
					this.OnMaNSXChanging(value);
					this.SendPropertyChanging();
					this._MaNSX = value;
					this.SendPropertyChanged("MaNSX");
					this.OnMaNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNSX", DbType="VarChar(255)")]
		public string TenNSX
		{
			get
			{
				return this._TenNSX;
			}
			set
			{
				if ((this._TenNSX != value))
				{
					this.OnTenNSXChanging(value);
					this.SendPropertyChanging();
					this._TenNSX = value;
					this.SendPropertyChanged("TenNSX");
					this.OnTenNSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nha_San_Xuat_Device", Storage="_Devices", ThisKey="MaNSX", OtherKey="MaNSX")]
		public EntitySet<Device> Devices
		{
			get
			{
				return this._Devices;
			}
			set
			{
				this._Devices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.Nha_San_Xuat = this;
		}
		
		private void detach_Devices(Device entity)
		{
			this.SendPropertyChanging();
			entity.Nha_San_Xuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sheet1")]
	public partial class Sheet1
	{
		
		private System.Nullable<int> _MaDev;
		
		private System.Nullable<int> _MaChiTiet;
		
		private string _ChatLieu;
		
		private string _KichThuoc;
		
		private string _DacDiem;
		
		private string _MauSac;
		
		private System.Nullable<decimal> _Gia;
		
		public Sheet1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDev", DbType="Int")]
		public System.Nullable<int> MaDev
		{
			get
			{
				return this._MaDev;
			}
			set
			{
				if ((this._MaDev != value))
				{
					this._MaDev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTiet", DbType="Int")]
		public System.Nullable<int> MaChiTiet
		{
			get
			{
				return this._MaChiTiet;
			}
			set
			{
				if ((this._MaChiTiet != value))
				{
					this._MaChiTiet = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatLieu", DbType="VarChar(255)")]
		public string ChatLieu
		{
			get
			{
				return this._ChatLieu;
			}
			set
			{
				if ((this._ChatLieu != value))
				{
					this._ChatLieu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichThuoc", DbType="VarChar(50)")]
		public string KichThuoc
		{
			get
			{
				return this._KichThuoc;
			}
			set
			{
				if ((this._KichThuoc != value))
				{
					this._KichThuoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DacDiem", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DacDiem
		{
			get
			{
				return this._DacDiem;
			}
			set
			{
				if ((this._DacDiem != value))
				{
					this._DacDiem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MauSac", DbType="VarChar(50)")]
		public string MauSac
		{
			get
			{
				return this._MauSac;
			}
			set
			{
				if ((this._MauSac != value))
				{
					this._MauSac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this._Gia = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.titleCD")]
	public partial class titleCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _MaCD;
		
		private string _Title;
		
		private string _IMG;
		
		private EntityRef<ChuDe> _ChuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaCDChanging(System.Nullable<int> value);
    partial void OnMaCDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIMGChanging(string value);
    partial void OnIMGChanged();
    #endregion
		
		public titleCD()
		{
			this._ChuDe = default(EntityRef<ChuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCD", DbType="Int")]
		public System.Nullable<int> MaCD
		{
			get
			{
				return this._MaCD;
			}
			set
			{
				if ((this._MaCD != value))
				{
					if (this._ChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCDChanging(value);
					this.SendPropertyChanging();
					this._MaCD = value;
					this.SendPropertyChanged("MaCD");
					this.OnMaCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG", DbType="VarChar(255)")]
		public string IMG
		{
			get
			{
				return this._IMG;
			}
			set
			{
				if ((this._IMG != value))
				{
					this.OnIMGChanging(value);
					this.SendPropertyChanging();
					this._IMG = value;
					this.SendPropertyChanged("IMG");
					this.OnIMGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_titleCD", Storage="_ChuDe", ThisKey="MaCD", OtherKey="MaCD", IsForeignKey=true)]
		public ChuDe ChuDe
		{
			get
			{
				return this._ChuDe.Entity;
			}
			set
			{
				ChuDe previousValue = this._ChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuDe.Entity = null;
						previousValue.titleCDs.Remove(this);
					}
					this._ChuDe.Entity = value;
					if ((value != null))
					{
						value.titleCDs.Add(this);
						this._MaCD = value.MaCD;
					}
					else
					{
						this._MaCD = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
